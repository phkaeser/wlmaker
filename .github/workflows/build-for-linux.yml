name: Build for Linux

on:
  push:
    branches: [ "main", "workflow" ]
  pull_request:
    branches: [ "main", "workflow" ]

env:
  INSTALL_PATH: "${HOME}/wlmaker"
  INSTALL_LIBRARY_PATH: "${HOME}/wlmaker/lib/$(dpkg-architecture -qDEB_HOST_MULTIARCH)"
  INSTALL_PKGCONFIG_PATH: "${HOME}/wlmaker/lib/$(dpkg-architecture -qDEB_HOST_MULTIARCH)/pkgconfig/:${HOME}/wlmaker/share/pkgconfig/"

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: debian:bookworm
      
    steps:
    - name: Install package dependencies.
      run: |
        apt-get update
        apt-get install -y git \
          cmake \
          doxygen \
          foot \
          glslang-dev \
          glslang-tools \
          graphviz \
          libcairo2-dev \
          libgbm-dev \
          libinput-dev \
          libncurses-dev \
          libudev-dev \
          libvulkan-dev \
          libxcb-composite0-dev \
          libxcb-dri3-dev \
          libxcb-ewmh-dev \
          libxcb-icccm4-dev \
          libxcb-present-dev \
          libxcb-render-util0-dev \
          libxcb-res0-dev \
          libxcb-xinput-dev \
          libxkbcommon-dev \
          meson \
          plantuml \
          xmlto \
          xsltproc
    
    - name: Checkout code including submodule dependencies.
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure and build submodule dependencies.
      run: |
        export PKG_CONFIG_PATH="${{ env.INSTALL_PKGCONFIG_PATH }}"
        export LD_LIBRARY_PATH="${{ env.INSTALL_LIBRARY_PATH }}"
        export PATH="${PATH}:${{ env.INSTALL_PATH }}/bin"
        cmake -DCMAKE_INSTALL_PREFIX:PATH=${{ env.INSTALL_PATH }} dependencies/ -B dependencies/build/
        cmake --build dependencies/build

    - name: Configure wlmaker through CMake.
      run: |
        export PKG_CONFIG_PATH="${{ env.INSTALL_PKGCONFIG_PATH }}"
        export LD_LIBRARY_PATH="${{ env.INSTALL_LIBRARY_PATH }}"
        export PATH="${PATH}:${{ env.INSTALL_PATH }}/bin"
        cmake -DCMAKE_INSTALL_PREFIX:PATH=${{ env.INSTALL_PATH }} -B build/

    - name: Build wlmaker.
      run: |
        export LD_LIBRARY_PATH="${{ env.INSTALL_LIBRARY_PATH }}"
        export PATH="${PATH}:${{ env.INSTALL_PATH }}/bin"
        cmake --build build/

    - name: Build documentation.
      run: cmake --build build/ --target doc

    - name: Create a tarball.
      run: |
        export LD_LIBRARY_PATH="${{ env.INSTALL_LIBRARY_PATH }}"
        export PATH="${PATH}:${{ env.INSTALL_PATH }}/bin"
        cmake --install build/
        cd "${HOME}" && tar -cvf "${HOME}/wlmaker-head.tar" wlmaker

    - name: Upload the tarball.
      uses: actions/upload-artifact@v2
      with:
        name: wlmaker-head
        # Note: Artefacts will be zipped.
        path: "${HOME}/wlmaker-head.tar"

    - name: Run all tests
      run: |
        export LD_LIBRARY_PATH="${{ env.INSTALL_LIBRARY_PATH }}"
        ctest --test-dir build/ --build-run-dir build/ -V
